<Window
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:l="http://schemas.livet-mvvm.net/2011/wpf"
    xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:vm="clr-namespace:MyOwnClock.ViewModels"
    mc:Ignorable="d" x:Class="MyOwnClock.Views.MainWindow"
    Title="時計 by Nekopanda" Height="86.974" Width="157.467" Background="#14000000" Loaded="Window_Loaded" ResizeMode="CanMinimize" Topmost="True" ShowInTaskbar="False">

    <Window.DataContext>
        <vm:MainWindowViewModel/>
    </Window.DataContext>

    <WindowChrome.WindowChrome>
        <WindowChrome GlassFrameThickness="1"/>
    </WindowChrome.WindowChrome>

    <i:Interaction.Triggers>

        <!--Viewに特別な要件が存在しない限りは、トリガーやアクションの自作にこだわらず積極的にコードビハインドを使いましょう -->
        <!--Viewのコードビハインドは、基本的にView内で完結するロジックとViewModelからのイベントの受信(専用リスナを使用する)に限るとトラブルが少なくなります -->
        <!--Livet1.1からはコードビハインドでViewModelのイベントを受信するためのWeakEventLisnterサポートが追加されています -->

        <!--WindowのContentRenderedイベントのタイミングでViewModelのInitializeメソッドが呼ばれます-->
        <i:EventTrigger EventName="ContentRendered">
            <l:LivetCallMethodAction MethodTarget="{Binding}" MethodName="Initialize"/>
        </i:EventTrigger>

        <!--Windowが閉じたタイミングでViewModelのDisposeメソッドが呼ばれます-->
        <i:EventTrigger EventName="Closed">
            <l:DataContextDisposeAction/>
        </i:EventTrigger>

        <!--WindowのCloseキャンセル処理に対応する場合は、WindowCloseCancelBehaviorの使用を検討してください-->

    </i:Interaction.Triggers>
    <Grid Background="#66000000">
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="Auto"/>
            <ColumnDefinition Width="*"/>
        </Grid.ColumnDefinitions>
        <TextBlock x:Name="timeText" HorizontalAlignment="Left" TextWrapping="Wrap" Text="{Binding TimeString}" VerticalAlignment="Top" FontSize="48" Foreground="White" Margin="10,1.203,0,0"/>
        <Button Content="−" HorizontalAlignment="Right" VerticalAlignment="Top" Width="23" BorderBrush="{x:Null}" Foreground="White" Grid.ColumnSpan="2" Margin="0,0,23,0" WindowChrome.IsHitTestVisibleInChrome="True">
            <i:Interaction.Triggers>
                <i:EventTrigger EventName="Click">
                    <l:WindowInteractionMessageAction>
                        <l:DirectInteractionMessage>
                            <l:WindowActionMessage Action="Minimize"/>
                        </l:DirectInteractionMessage>
                    </l:WindowInteractionMessageAction>
                </i:EventTrigger>
            </i:Interaction.Triggers>
            <Button.Style>
                <Style TargetType="{x:Type Button}">
                    <Setter Property="Background" Value="Transparent"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type Button}">
                                <Border Background="{TemplateBinding Background}">
                                    <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                </Border>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                    <Style.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="#22000000"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" Value="#44000000"/>
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </Button.Style>
        </Button>
        <Button Content="✕" HorizontalAlignment="Right" VerticalAlignment="Top" Width="23" BorderBrush="{x:Null}" Foreground="White" Grid.Column="1" WindowChrome.IsHitTestVisibleInChrome="True">
            <i:Interaction.Triggers>
                <i:EventTrigger EventName="Click">
                    <l:WindowInteractionMessageAction>
                        <l:DirectInteractionMessage>
                            <l:WindowActionMessage Action="Close"/>
                        </l:DirectInteractionMessage>
                    </l:WindowInteractionMessageAction>
                </i:EventTrigger>
            </i:Interaction.Triggers>
            <Button.Style>
                <Style TargetType="{x:Type Button}">
                    <Setter Property="Background" Value="Transparent"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type Button}">
                                <Border Background="{TemplateBinding Background}">
                                    <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                </Border>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                    <Style.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="#E81123"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" Value="#E2232D"/>
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </Button.Style>
        </Button>
        <TextBlock x:Name="secondText" Height="16.222" Margin="5,40.05,0,0" TextWrapping="Wrap" Text="{Binding SecondString}" VerticalAlignment="Top" Foreground="White" Grid.Column="1" HorizontalAlignment="Left" Width="24.889"/>
        <TextBlock x:Name="dateText" Height="22.732" TextWrapping="Wrap" Text="{Binding DateString}" VerticalAlignment="Top" Foreground="White" HorizontalAlignment="Center" FontSize="16" Width="135.329" Margin="0,61.272,0,0" Grid.ColumnSpan="2" TextAlignment="Center"/>
    </Grid>
</Window>
